"use strict";

var _unchainedBitcoin = require("unchained-bitcoin");

var _fixtures = require("../test/fixtures");

var _conversion = require("./conversion");

describe("convertToXPUB", function () {
  test("no conversion if none is required", function () {
    expect((0, _conversion.convertToXPUB)(_fixtures.KEY.MAIN.XPUB, _unchainedBitcoin.NETWORKS.MAINNET)).toBe(_fixtures.KEY.MAIN.XPUB);
    expect((0, _conversion.convertToXPUB)(_fixtures.KEY.TEST.TPUB, _unchainedBitcoin.NETWORKS.TESTNET)).toBe(_fixtures.KEY.TEST.TPUB);
  });
  test("conversion of mainnet keys", function () {
    expect((0, _conversion.convertToXPUB)(_fixtures.KEY.MAIN.YPUB, _unchainedBitcoin.NETWORKS.MAINNET)).toBe(_fixtures.KEY.MAIN.XPUB);
    expect((0, _conversion.convertToXPUB)(_fixtures.KEY.MAIN.ZPUB, _unchainedBitcoin.NETWORKS.MAINNET)).toBe(_fixtures.KEY.MAIN.XPUB);
  });
  test("conversion of testnet keys", function () {
    expect((0, _conversion.convertToXPUB)(_fixtures.KEY.TEST.UPUB, _unchainedBitcoin.NETWORKS.TESTNET)).toBe(_fixtures.KEY.TEST.TPUB);
    expect((0, _conversion.convertToXPUB)(_fixtures.KEY.TEST.VPUB, _unchainedBitcoin.NETWORKS.TESTNET)).toBe(_fixtures.KEY.TEST.TPUB);
  });
  test("conversion of mainnet keys to testnet keys", function () {
    expect((0, _conversion.convertToXPUB)(_fixtures.KEY.MAIN.XPUB, _unchainedBitcoin.NETWORKS.TESTNET)).toBe(_fixtures.KEY.TEST.TPUB);
    expect((0, _conversion.convertToXPUB)(_fixtures.KEY.MAIN.YPUB, _unchainedBitcoin.NETWORKS.TESTNET)).toBe(_fixtures.KEY.TEST.TPUB);
    expect((0, _conversion.convertToXPUB)(_fixtures.KEY.MAIN.ZPUB, _unchainedBitcoin.NETWORKS.TESTNET)).toBe(_fixtures.KEY.TEST.TPUB);
  });
  test("conversion of testnet keys to mainnet keys", function () {
    expect((0, _conversion.convertToXPUB)(_fixtures.KEY.TEST.TPUB, _unchainedBitcoin.NETWORKS.MAINNET)).toBe(_fixtures.KEY.MAIN.XPUB);
    expect((0, _conversion.convertToXPUB)(_fixtures.KEY.TEST.UPUB, _unchainedBitcoin.NETWORKS.MAINNET)).toBe(_fixtures.KEY.MAIN.XPUB);
    expect((0, _conversion.convertToXPUB)(_fixtures.KEY.TEST.VPUB, _unchainedBitcoin.NETWORKS.MAINNET)).toBe(_fixtures.KEY.MAIN.XPUB);
  });
});