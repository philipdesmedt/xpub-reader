"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.networkData = networkData;
exports.networkLabel = networkLabel;
exports.NETWORKS = exports.TESTNET = exports.MAINNET = void 0;

var bitcoin = require('bitcoinjs-lib');
/**
 * This module exports network constants and provide some utility
 * functions for displaying the network name and passing the network
 * value to bitcoinjs.
 * 
 * @module networks
 */

/**
 * Constant corresponding to the Bitcoin mainnet.
 * 
 * @constant
 * @type {string}
 * @default mainnet
 * 
 */


var MAINNET = "mainnet";
/**
 * Constant corresponding to the current Bitcoin testnet.
 * 
 * @constant
 * @type {string}
 * @default testnet
 */

exports.MAINNET = MAINNET;
var TESTNET = "testnet";
/**
 * Enumeration of possible values for bitcoin networks ([MAINET]{@link module:networks.MAINNET}|[TESTNET]{@link module:networks.TESTNET}).
 *
 * @constant
 * @enum {string}
 * @default
 */

exports.TESTNET = TESTNET;
var NETWORKS = {
  MAINNET: MAINNET,
  TESTNET: TESTNET
};
/**
 * Returns bitcoinjs-lib network object corresponding to the given
 * network.
 *
 * This function is for internal use by this library.
 * 
 * @param {module:networks.NETWORKS} network - bitcoin network
 * @returns {Network} bitcoinjs-lib network object
 */

exports.NETWORKS = NETWORKS;

function networkData(network) {
  switch (network) {
    case NETWORKS.MAINNET:
      return bitcoin.networks.bitcoin;

    case NETWORKS.TESTNET:
      return bitcoin.networks.testnet;

    default:
      return bitcoin.networks.testnet;
  }
}
/**
 * Returns human-readable network label for the specified network.
 * 
 * @param {module:networks.NETWORKS} network - bitcoin network
 * @returns {string} network label
 * @example
 * import {MAINNET} from "unchained-bitcoin";
 * console.log(networkLabel(MAINNET)); // "Mainnet"
 */


function networkLabel(network) {
  switch (network) {
    case NETWORKS.MAINNET:
      return "Mainnet";

    case NETWORKS.TESTNET:
      return "Testnet";

    default:
      return "Testnet";
  }
}