"use strict";

var _signatures = require("./signatures");

var _fixtures = require("./fixtures");

describe('signatures', function () {
  describe('validateMultisigSignature', function () {
    it("throws an error on an invalid signature", function () {
      var fixture = _fixtures.TEST_FIXTURES.transactions[0];
      expect(function () {
        (0, _signatures.validateMultisigSignature)(fixture.network, fixture.inputs, fixture.outputs, 0, "");
      }).toThrow(/is too short/i);
      expect(function () {
        (0, _signatures.validateMultisigSignature)(fixture.network, fixture.inputs, fixture.outputs, 0, "foobar");
      }).toThrow(/is too short/i);
    });

    _fixtures.TEST_FIXTURES.transactions.forEach(function (fixture) {
      describe("validating signature for a transaction which ".concat(fixture.description), function () {
        it("returns the public key corresponding to a valid input signature", function () {
          fixture.inputs.forEach(function (input, inputIndex) {
            var publicKey = (0, _signatures.validateMultisigSignature)(fixture.network, fixture.inputs, fixture.outputs, inputIndex, fixture.signature[inputIndex]);
            expect(publicKey).toEqual(fixture.publicKeys[inputIndex]);
          });
        });
        it("returns false for a valid signature for a different input", function () {
          var publicKey = (0, _signatures.validateMultisigSignature)(fixture.network, fixture.inputs, fixture.outputs, 0, fixture.signature[1]);
          expect(publicKey).toEqual(false);
        });
      });
    });
  });
});